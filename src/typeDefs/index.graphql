type Query {
	element_types: [ElementType]
	fixtures(
		gw: Int
		team: Int
		home: Boolean
		away: Boolean
		finished: Boolean
	): [Fixture]
	gameweek(id: Int, is_current: Boolean, is_next: Boolean): GameWeek
	gameweeks(is_finished: Boolean): [GameWeek]
	player(id: Int): Player
	players(
		first: Int
		by_form: Boolean
		by_transfers: Boolean
		by_points: Boolean
		trim_extras: Boolean
		differentials: Boolean
		captains: Boolean
		premiums: Boolean
		mid_rangers: Boolean
		budgets: Boolean
	): [Player]
	team(id: Int): Team
	teams: [Team]
}

type Chip {
	chip_name: String
	num_played: Int
}

type GameWeek {
	avg_points: Int
	chip_plays: [Chip]
	deadline_time: String
	finished: Boolean
	highest_score: Int
	id: Int
	is_current: Boolean
	is_next: Boolean
	is_previous: Boolean
}

type PastFixture {
	assists: Int
	bps: Int
	clean_sheets: Int
	goals_conceded: Int
	goals_scored: Int
	minutes: Int
	opponent_team: Team
	own_goals: Int
	penalties_missed: Int
	penalties_saved: Int
	red_cards: Int
	round: Int
	saves: Int
	selected: Int
	team_a_score: Int
	team_h_score: Int
	total_points: Int
	value: Int
	was_home: Boolean
	yellow_cards: Int
}

type Player {
	assists: Int
	bonus: Int
	bps: Int
	chance_of_playing_next_round: Int
	chance_of_playing_this_round: Int
	clean_sheets: Int
	clean_sheets_per_90: Float
	code: Int
	corners_and_indirect_freekicks_order: Int
	corners_and_indirect_freekicks_text: String
	cost_change_event: Int
	cost_change_event_fall: Int
	cost_change_start: Int
	cost_change_start_fall: Int
	creativity: Float
	creativity_rank: Int
	creativity_rank_type: Int
	direct_freekicks_order: Int
	direct_freekicks_text: String
	dreamteam_count: Int
	element_type: ElementType
	ep_next: Float
	ep_this: Float
	event_points: Int
	expected_assists: Float
	expected_assists_per_90: Float
	expected_goal_involvements: Float
	expected_goal_involvements_per_90: Float
	expected_goals: Float
	expected_goals_conceded: Float
	expected_goals_conceded_per_90: Float
	expected_goals_per_90: Float
	first_name: String
	form: Float
	form_rank: Int
	form_rank_type: Int
	goals_conceded: Int
	goals_conceded_per_90: Float
	goals_scored: Int
	ict_index: Float
	ict_index_rank: Int
	ict_index_rank_type: Int
	id: Int
	in_dreamteam: Boolean
	influence: Float
	influence_rank: Int
	influence_rank_type: Int
	minutes: Int
	news: String
	news_added: String
	now_cost: Float
	now_cost_rank: Int
	now_cost_rank_type: Int
	own_goals: Int
	past_fixtures: [PastFixture]
	penalties_missed: Int
	penalties_order: Int
	penalties_saved: Int
	penalties_text: String
	photo: String
	points_per_game: Float
	points_per_game_rank: Int
	points_per_game_rank_type: Int
	red_cards: Int
	saves: Int
	saves_per_90: Float
	second_name: String
	selected_by_percent: Float
	selected_rank: Int
	selected_rank_type: Int
	special: Boolean
	squad_number: Int
	starts: Int
	starts_per_90: Float
	status: String
	team: Team
	team_code: Int
	threat: Float
	threat_rank: Int
	threat_rank_type: Int
	total_points: Int
	transfers_in: Int
	transfers_in_event: Int
	transfers_out: Int
	transfers_out_event: Int
	upcoming_fixtures(
		gw: Int
		first: Int
		last: Int
		from: Int
		to: Int
	): [UpcomingFixture]
	value_form: String
	value_season: String
	web_name: String
	yellow_cards: Int
}

type UpcomingFixture {
	code: Int
	difficulty: Int
	event: Int
	finished: Boolean
	finished_provisional: Boolean
	id: Int
	is_home: Boolean
	kickoff_time: String
	minutes: Int
	pulse_id: Int
	started: Boolean
	team_a: Int
	team_a_difficulty: Int
	team_h: Int
	team_h_difficulty: Int
}

type Team {
	code: Int
	draw: Int
	id: Int
	loss: Int
	name: String
	played: Int
	players: [Player]
	points: Int
	position: Int
	pulse_id: Int
	short_name: String
	strength: Int
	strength_attack_away: Int
	strength_attack_home: Int
	strength_defence_away: Int
	strength_defence_home: Int
	strength_overall_away: Int
	strength_overall_home: Int
	win: Int
}

type ElementType {
	element_count: Int
	id: Int
	plural_name: String
	plural_name_short: String
	singular_name: String
	singular_name_short: String
	squad_max_play: Int
	squad_min_play: Int
	squad_select: Int
	sub_positions_locked: [Int]
	ui_shirt_specific: Boolean
}

type Fixture {
	code: Int
	event: Int
	finished: Boolean
	finished_provisional: Boolean
	id: Int
	kickoff_time: String
	minutes: Int
	provisional_start_time: Boolean
	pulse_id: Int
	started: Boolean
	stats: [FixtureStats]
	team_a: Team
	team_a_difficulty: Int
	team_a_score: Int
	team_h: Team
	team_h_difficulty: Int
	team_h_score: Int
}

type FixtureStats {
	a: [ElementStats]
	h: [ElementStats]
	identifier: String
}

type ElementStats {
	element: Int
	value: Int
}
